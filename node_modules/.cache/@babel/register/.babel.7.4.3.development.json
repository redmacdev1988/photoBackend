{
  "{\"sourceRoot\":\"/Users/rickytsao/Desktop/photoBackend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/rickytsao/Desktop/photoBackend\",\"filename\":\"/Users/rickytsao/Desktop/photoBackend/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rickytsao/Desktop/photoBackend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rickytsao/Desktop/photoBackend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/rickytsao/Desktop/photoBackend",
      "filename": "/Users/rickytsao/Desktop/photoBackend/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rickytsao/Desktop/photoBackend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rickytsao/Desktop/photoBackend/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rickytsao/Desktop/photoBackend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rickytsao/Desktop/photoBackend/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar path = require('path');\n\nconsole.log('------ start -------');\n\nvar files = _fs[\"default\"].readdirSync('daily-photos/');\n\nvar arrOfObjects = [];\nfiles.map(function (value, index) {\n  arrOfObjects.push({\n    title: value,\n    url: 'http://localhost:6680/daily-photos/' + value\n  });\n});\nvar arrStr = JSON.stringify(arrOfObjects);\nvar photoObj = \"{\\\"name\\\": \\\"My Daily Photos\\\", \\\"array\\\": \".concat(arrStr, \"}\");\nvar jsonResult = JSON.parse(photoObj); //console.log('---- json results ------');\n//console.log(jsonResult);\n\nvar app = (0, _express[\"default\"])(); //app.use(cors());\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"*\");\n  next();\n});\napp.listen(process.env.PORT, function () {\n  return console.log(\"Example app listening on port \".concat(process.env.PORT));\n});\napp.get('/', function (req, res) {\n  console.log('starting up the app');\n  return res.send(JSON.stringify(jsonResult));\n});\napp.get('/test', function (req, res) {\n  return res.send('GET HTTP method on test resource');\n});\napp.get('/users', function (req, res) {\n  return res.send('GET HTTP method on user resource');\n});\napp.get('/daily-photos/:fileName', function (req, res) {\n  console.log(\"------ you want file ------ \".concat(req.params.fileName));\n  return res.sendFile(path.resolve(\"daily-photos/\".concat(req.params.fileName)));\n}); // ASC \n// DESC\n\napp.get('/photos/:sort', function (req, res) {\n  console.log(req.params.sort);\n  var sortString = req.params.sort.toUpperCase();\n\n  if (sortString === 'ASC' || sortString === 'ASCENDING') {\n    return res.send(\"GET avl tree with \".concat(req.params.sort, \" titles\"));\n  } else if (sortString === 'DESC' || sortString === 'DESCENDING') {\n    return res.send(\"GET avl tree with \".concat(req.params.sort, \" titles\"));\n  }\n\n  return res.send('GET HTTP method on user resource');\n});\napp.post('/users', function (req, res) {\n  return res.send('POST HTTP method on user resource');\n});\napp.post('/messages', function (req, res) {\n  console.log(\"POST on url /messages\");\n  console.log(req.body);\n  var id = (0, _v[\"default\"])();\n  var message = {\n    id: id\n  };\n  message[id] = 'hadooooooken!';\n  return res.send(message);\n});\napp.put('/users', function (req, res) {\n  return res.send('PUT HTTP method on user resource');\n});\napp[\"delete\"]('/users/:userId', function (req, res) {\n  return res.send(\"DELETE HTTP method on user/\".concat(req.params.userId, \" resource\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "console",
        "log",
        "files",
        "fs",
        "readdirSync",
        "arrOfObjects",
        "map",
        "value",
        "index",
        "push",
        "title",
        "url",
        "arrStr",
        "JSON",
        "stringify",
        "photoObj",
        "jsonResult",
        "parse",
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "req",
        "res",
        "next",
        "header",
        "listen",
        "process",
        "env",
        "PORT",
        "get",
        "send",
        "params",
        "fileName",
        "sendFile",
        "resolve",
        "sort",
        "sortString",
        "toUpperCase",
        "post",
        "body",
        "id",
        "message",
        "put",
        "userId"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/rickytsao/Desktop/photoBackend/src",
      "sourcesContent": [
        "\nimport 'dotenv/config';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport express from 'express';\nimport uuidv4 from 'uuid/v4';\nimport fs from 'fs';\nvar path = require('path');\n\n\nconsole.log('------ start -------');\n\n\nvar files = fs.readdirSync('daily-photos/');\nvar arrOfObjects = [];\nfiles.map(function(value, index) {\n  arrOfObjects.push({\n    title: value,\n    url:  'http://localhost:6680/daily-photos/' + value\n  })\n});\nlet arrStr = JSON.stringify(arrOfObjects);\nlet photoObj = `{\"name\": \"My Daily Photos\", \"array\": ${arrStr}}`;\nlet jsonResult = JSON.parse(photoObj);\n//console.log('---- json results ------');\n//console.log(jsonResult);\n\nconst app = express();\n//app.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"*\");\n  next();\n});\n\napp.listen(process.env.PORT, () =>\n  console.log(`Example app listening on port ${process.env.PORT}`)\n);\n\napp.get('/', (req, res) => {\n  console.log('starting up the app');\n  return res.send(JSON.stringify(jsonResult));\n});\n\napp.get('/test', (req, res) => {\n  return res.send('GET HTTP method on test resource');\n});\n\napp.get('/users', (req, res) => {\n  return res.send('GET HTTP method on user resource');\n});\n\napp.get('/daily-photos/:fileName', (req, res) => {\n  console.log(`------ you want file ------ ${req.params.fileName}`);\n  return res.sendFile(path.resolve(`daily-photos/${req.params.fileName}`));\n});\n\n// ASC \n// DESC\napp.get('/photos/:sort', (req, res) => {\n\n  console.log(req.params.sort);\n\n  const sortString = req.params.sort.toUpperCase();\n\n  if (sortString === 'ASC' || sortString === 'ASCENDING') {\n    return res.send(\n      `GET avl tree with ${req.params.sort} titles`\n    );\n  } else if (sortString === 'DESC' || sortString === 'DESCENDING') {\n    return res.send(\n      `GET avl tree with ${req.params.sort} titles`\n    );\n  }\n\n  return res.send('GET HTTP method on user resource');\n});\n  \n  app.post('/users', (req, res) => {\n    return res.send('POST HTTP method on user resource');\n  });\n  \n  app.post('/messages', (req, res) => {\n    console.log(`POST on url /messages`);\n    console.log(req.body);\n    const id = uuidv4();\n    const message = {\n      id,\n    };\n    message[id] = 'hadooooooken!';\n    return res.send(message);\n  });\n\n  app.put('/users', (req, res) => {\n    return res.send('PUT HTTP method on user resource');\n  });\n  \n  app.delete('/users/:userId', (req, res) => {\n    return res.send(\n        `DELETE HTTP method on user/${req.params.userId} resource`\n    );\n  });\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561429849520
  }
}